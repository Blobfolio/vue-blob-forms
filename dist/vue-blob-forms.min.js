!function(){var BlobFormsVue={};BlobFormsVue.install=function(Vue,options){function _validateForm(el,touch){var name=_isForm(el);if(!name||void 0===$scope[name]||$scope[name].blobForms[name].$lock)return!1;Vue.set($scope[name].blobForms[name],"$lock",!0),touch=!!touch;var fieldKeys=Object.keys($scope[name].blobFields[name]);for(i=0;i<fieldKeys.length;i++)_validateField(el,$scope[name].blobFields[name][fieldKeys[i]].el,touch);return Vue.set($scope[name].blobForms[name],"$lock",!1),Vue.nextTick(function(){_updateFormClasses(el)}),!0}function _validateField(form,field,touch){var name=_isForm(form);if(!name||void 0===$scope[name])return!1;var fieldName=_isField(field);if(!field)return!1;touch=!!touch;var fieldValue=field.value||"";if($scope[name].blobFields[name][fieldName].$lock)return!1;Vue.set($scope[name].blobFields[name][fieldName],"$lock",!0),touch&&!$scope[name].blobFields[name][fieldName].touched&&Vue.set($scope[name].blobFields[name][fieldName],"touched",!0);var changed=_checksum(fieldValue)!==$scope[name].blobFields[name][fieldName].originalValue;changed!==$scope[name].blobFields[name][fieldName].changed&&Vue.set($scope[name].blobFields[name][fieldName],"changed",changed);var valid=!1;if(_resetValidity(field),void 0===field.willValidate||field.checkValidity()?valid=!0:$scope[name].blobFields[name][fieldName].touched||field.validity.valueMissing&&(valid=!0,_resetValidity(field)),$scope[name].blobFields[name][fieldName].touched&&!fieldValue.length&&field.validity.valueMissing&&(valid=!1),fieldValue.length&&valid&&"email"===field.getAttribute("type")&&((valid=!!regexEmail.test(fieldValue))||field.setCustomValidity("Please enter a complete email address.")),valid){var fieldCallback=field.dataset.validationCallback||field.getAttribute("validation-callback")||!1;if(fieldCallback&&"function"==typeof $scope[name][fieldCallback]){var callbackResponse=$scope[name][fieldCallback](fieldValue);!0!==callbackResponse&&(valid=!1,"string"==typeof callbackResponse&&callbackResponse.length?field.setCustomValidity(callbackResponse):field.setCustomValidity("This input is not valid."))}}return valid?(_resetValidity(field),$scope[name].blobErrors[name][fieldName]&&Vue.delete($scope[name].blobErrors[name],fieldName)):Vue.set($scope[name].blobErrors[name],fieldName,field.validationMessage),Vue.set($scope[name].blobFields[name][fieldName],"valid",valid),$scope[name].blobFields[name][fieldName].valid?(field.classList.contains("is-invalid")&&field.classList.remove("is-invalid"),field.classList.contains("is-valid")||field.classList.add("is-valid")):(field.classList.contains("is-invalid")||field.classList.add("is-invalid"),field.classList.contains("is-valid")&&field.classList.remove("is-valid")),$scope[name].blobFields[name][fieldName].touched?field.classList.contains("is-touched")||field.classList.add("is-touched"):field.classList.contains("is-touched")&&field.classList.remove("is-touched"),$scope[name].blobFields[name][fieldName].changed?field.classList.contains("is-changed")||field.classList.add("is-changed"):field.classList.contains("is-changed")&&field.classList.remove("is-changed"),Vue.set($scope[name].blobFields[name][fieldName],"$lock",!1),$scope[name].blobForms[name].$lock||Vue.nextTick(function(){_updateFormClasses(form)}),valid}function _resetValidity(el){try{el.checkValidity(),el.setCustomValidity("")}catch(Ex){return!1}}function _updateFormClasses(el){var name=_isForm(el);if(!name)return!1;var changed=!1,valid=!0,touched=!1,fields=Object.keys($scope[name].blobFields[name]);for(i=0;i<fields.length&&(!changed&&$scope[name].blobFields[name][fields[i]].changed&&(changed=!0),valid&&!$scope[name].blobFields[name][fields[i]].valid&&(valid=!1),!touched&&$scope[name].blobFields[name][fields[i]].touched&&(touched=!0),!changed||valid||!touched);i++);valid!==$scope[name].blobForms[name].valid&&Vue.set($scope[name].blobForms[name],"valid",valid),changed!==$scope[name].blobForms[name].changed&&Vue.set($scope[name].blobForms[name],"changed",changed),touched!==$scope[name].blobForms[name].touched&&Vue.set($scope[name].blobForms[name],"touched",touched),valid?(el.classList.contains("is-invalid")&&el.classList.remove("is-invalid"),el.classList.contains("is-valid")||el.classList.add("is-valid")):(el.classList.contains("is-invalid")||el.classList.add("is-invalid"),el.classList.contains("is-valid")&&el.classList.remove("is-valid")),touched?el.classList.contains("is-touched")||el.classList.add("is-touched"):el.classList.contains("is-touched")&&el.classList.remove("is-touched"),changed?el.classList.contains("is-changed")||el.classList.add("is-changed"):el.classList.contains("is-changed")&&el.classList.remove("is-changed"),$scope[name].$forceUpdate()}function _isForm(el){if(!el.nodeName||"FORM"!==el.nodeName)return!1;var name=el.getAttribute("name")||"";return name||!1}function _isField(el){if(!el.nodeName||"INPUT"!==el.nodeName&&"SELECT"!==el.nodeName&&"TEXTAREA"!==el.nodeName)return!1;var name=el.getAttribute("name")||"";return name||!1}function _getFields(el){if(!1===_isForm(el))return!1;var fields=el.querySelectorAll("input, select, textarea");if(!fields)return!1;for(var out=[],i=0;i<fields.length;i++)(fields[i].getAttribute("name")||"")&&out.push(fields[i]);return!!out.length&&out}function _loadFields(el){var name=_isForm(el);if(!1===name)return!1;var fields=_getFields(el);if(!1===fields)return Vue.set($scope[name].blobForms[name],"fields",{}),!1;var changed=!1,fieldNames=[],fieldKeys=Object.keys($scope[name].blobFields[name]),errorKeys=Object.keys($scope[name].blobFields[name]);for(i=0;i<fields.length;i++){var fieldName=fields[i].getAttribute("name")||"";fieldName&&(-1===fieldKeys.indexOf(fieldName)&&(changed=!0,fieldKeys.push(fieldName),Vue.set($scope[name].blobFields[name],fieldName,{name:fieldName,el:fields[i],originalValue:_checksum(fields[i].value),changed:!1,touched:!1,valid:!0,$lock:!1}),fields[i].addEventListener("blur",function(e){Vue.nextTick(function(){_validateField(el,e.target,!0)})}),fieldNames.push(fieldName)))}if(fieldKeys.length!==fieldNames.length)for(i=0;i<fieldKeys.length;i++)if(-1===fieldNames.indexOf(fieldKeys[i])){changed=!0;var fieldEvents=getEventListeners($scope[name].blobFields[name].el);for(j=0;j<fieldEvents.length;j++)fieldEvents[j].remove();Vue.delete($scope[name].blobFields[name],fieldKeys[i]),-1===errorKeys.indexOf(fieldKeys[i])&&(changed=!0,Vue.delete($scope[name].blobFields[name],fieldKeys[i]))}return changed&&$scope[name].$forceUpdate(),!0}function _checksum(value){if("object"==typeof value)try{value=JSON.stringify(value)}catch(Ex){return 0}var i,hash=0,strlen=value.length;if(!strlen)return hash;for(i=0;i<strlen;i++)hash=(hash<<5)-hash+value.charCodeAt(i),hash&=hash;return hash}var regexEmail=new RegExp(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/),$scope={};Vue.prototype.blobForms={},Vue.prototype.blobFields={},Vue.prototype.blobErrors={},Vue.directive("blobForms",{id:"blobForms",priority:5e4,inserted:function(el,binding,vnode){var name=_isForm(el);if(name)return el.setAttribute("novalidate",!0),$scope[name]=vnode.context,Vue.set(vnode.context.blobForms,name,{name:name,el:el,changed:!1,touched:!1,valid:!0,$lock:!1}),void 0===vnode.context.blobFields[name]&&Vue.set(vnode.context.blobFields,name,{}),void 0===vnode.context.blobErrors[name]&&Vue.set(vnode.context.blobErrors,name,{}),vnode.context.$forceUpdate(),new MutationObserver(function(mutations){var fieldName,fieldKeys=Object.keys(vnode.context.blobFields[name]),errorKeys=Object.keys(vnode.context.blobErrors[name]),changed=!1;for(i=0;i<mutations.length;i++){for(j=0;j<mutations[i].addedNodes.length;j++)(fieldName=_isField[mutations[i].addedNodes[j]])&&-1===fieldKeys.indexOf(fieldName)&&(changed=!0,fieldKeys.push(fieldName),Vue.set($scope[name].blobFields[name],fieldName,{name:fieldName,el:fields[i],originalValue:_checksum(mutations[i].addedNodes[j]),changed:!1,touched:!1,valid:!0,$lock:!1}));for(j=0;j<mutations[i].removedNodes.length;j++)if(fieldName=_isField[mutations[i].removedNodes[j]]){var fieldEvents=getEventListeners(mutations[i].removedNodes[j]);for(k=0;k<fieldEvents.length;k++)fieldEvents[k].remove();-1!==fieldKeys.indexOf(fieldName)&&(changed=!0,Vue.delete($scope[name].blobFields[name],fieldName)),-1!==errorKeys.indexOf(fieldName)&&(changed=!0,Vue.delete($scope[name].blobErrors[name],fieldName))}changed&&vnode.context.$forceUpdate()}}).observe(el,{childList:!0,subtree:!0}),el.addEventListener("input",function(e){Vue.nextTick(function(){"SELECT"!==e.target.tagName&&!1!==_isField(e.target)&&_validateField(el,e.target,!0)})}),el.addEventListener("change",function(e){Vue.nextTick(function(){"SELECT"===e.target.tagName&&!1!==_isField(e.target)&&_validateField(el,e.target,!0)})}),Vue.nextTick(function(){_loadFields(el),Vue.nextTick(function(){_validateForm(el)})}),!0}}),Vue.prototype.formErrors=function(name,fieldName){if(!name||void 0===this.blobForms[name])return!1;var errors=this.blobErrors[name]||{},errorKeys=Object.keys(errors);return!!errorKeys.length&&(fieldName?-1!==errorKeys.indexOf(fieldName)&&errors[fieldName]:errors)},Vue.prototype.validateForm=function(name){if(!name||void 0===this.blobForms[name])return{other:"Invalid form."};_validateForm(this.blobForms[name].el,!0);var errors=this.blobErrors[name]||{};return!Object.keys(errors).length||errors},Vue.prototype.formTouched=function(name,fieldName){return!(!name||void 0===this.blobForms[name])&&(fieldName?this.blobFields[name][fieldName]&&this.blobFields[name][fieldName].touched:this.blobForms[name].touched)},Vue.prototype.formChanged=function(name,fieldName){return!(!name||void 0===this.blobForms[name])&&(fieldName?this.blobFields[name][fieldName]&&this.blobFields[name][fieldName].changed:this.blobForms[name].changed)},Vue.prototype.formValid=function(name,fieldName){return!(!name||void 0===this.blobForms[name])&&(fieldName?this.blobFields[name][fieldName]&&this.blobFields[name][fieldName].valid:this.blobForms[name].valid)}},"undefined"!=typeof window&&window.Vue&&window.Vue.use(BlobFormsVue)}();